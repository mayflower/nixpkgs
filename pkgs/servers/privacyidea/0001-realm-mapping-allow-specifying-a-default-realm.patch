From 72e640c30a92ebfbea973d6833c8e611e93a51f8 Mon Sep 17 00:00:00 2001
From: Robin Gloster <mail@glob.in>
Date: Wed, 13 Nov 2019 07:18:55 +0100
Subject: [PATCH] realm-mapping: allow specifying a default realm

---
 pi_ldapproxy/realmmapping.py | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/pi_ldapproxy/realmmapping.py b/pi_ldapproxy/realmmapping.py
index 61e7646..d0bcbd3 100644
--- a/pi_ldapproxy/realmmapping.py
+++ b/pi_ldapproxy/realmmapping.py
@@ -114,6 +114,7 @@ class AppCacheMappingStrategy(RealmMappingStrategy):
     def __init__(self, factory, config):
         RealmMappingStrategy.__init__(self, factory, config)
         self.mappings = config['mappings']
+        self.default_realm = config['realm']
 
     def resolve(self, dn):
         """
@@ -122,7 +123,7 @@ class AppCacheMappingStrategy(RealmMappingStrategy):
         """
         marker = self.factory.app_cache.get_cached_marker(dn) # TODO: app cache might be None
         if marker is None:
-            raise RealmMappingError('No entry in app cache for dn={dn!r}'.format(dn=dn))
+            return defer.succeed((self.default_realm,self.default_realm))
         realm = self.mappings.get(marker)
         if realm is None:
             raise RealmMappingError('No mapping for marker={marker!r}'.format(marker=marker))
@@ -131,4 +132,4 @@ class AppCacheMappingStrategy(RealmMappingStrategy):
 REALM_MAPPING_STRATEGIES = {
     'static': StaticMappingStrategy,
     'app-cache': AppCacheMappingStrategy,
-}
\ No newline at end of file
+}
-- 
2.23.0

