--- a/privacyidea/lib/subscriptions.py	2018-07-31 13:42:05.747340010 +0200
+++ b/privacyidea/lib/subscriptions.py	2018-07-31 13:44:14.209066203 +0200
@@ -230,35 +230,6 @@
         without a subscription file. If not given, the default is used.
     :return: bool
     """
-    if application.lower() in APPLICATIONS.keys():
-        subscriptions = get_subscription(application) or get_subscription(
-            application.lower())
-        # get the number of active assigned tokens
-        active_tokens = get_tokens(assigned=True, active=True, count=True)
-        free_subscriptions = max_free_subscriptions or APPLICATIONS.get(application.lower())
-        if len(subscriptions) == 0:
-            if active_tokens > free_subscriptions:
-                raise SubscriptionError(description="No subscription for your client.",
-                                        application=application)
-        else:
-            subscription = subscriptions[0]
-            expire_date = subscription.get("date_till")
-            if expire_date < datetime.datetime.now():
-                # subscription has expired
-                if raise_exception_probability(subscription):
-                    raise SubscriptionError(description="Your subscription "
-                                                        "expired.",
-                                            application=application)
-            else:
-                # subscription is still valid, so check the signature.
-                check_signature(subscription)
-                if active_tokens > subscription.get("num_tokens"):
-                    # subscription is exceeded
-                    raise SubscriptionError(description="Too many tokens "
-                                                        "enrolled. "
-                                                        "Subscription exceeded.",
-                                            application="privacyIDEA")
-
     return True
 
 
--- a/privacyidea/lib/subscriptions.py
+++ b/privacyidea/lib/subscriptions.py
@@ -95,19 +95,19 @@ def subscription_status():
 
     :return: subscription state
     """
-    token_count = get_tokens(assigned=True, active=True, count=True)
-    if token_count <= APPLICATIONS.get("privacyidea", 50):
-        return 0
-
-    subscriptions = get_subscription("privacyidea")
-    if len(subscriptions) == 0:
-        return 1
-
-    try:
-        check_subscription("privacyidea")
-    except SubscriptionError as exx:
-        log.warning(u"{0}".format(exx))
-        return 2
+    #token_count = get_tokens(assigned=True, active=True, count=True)
+    #if token_count <= APPLICATIONS.get("privacyidea", 50):
+    #    return 0
+
+    #subscriptions = get_subscription("privacyidea")
+    #if len(subscriptions) == 0:
+    #    return 1
+
+    #try:
+    #    check_subscription("privacyidea")
+    #except SubscriptionError as exx:
+    #    log.warning(u"{0}".format(exx))
+    #    return 2
 
     return 3
 
